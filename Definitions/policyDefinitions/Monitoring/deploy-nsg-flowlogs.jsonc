{
  "$schema": "https://raw.githubusercontent.com/Azure/enterprise-azure-policy-as-code/main/Schemas/policy-definition-schema.json",
  "name": "Deploy-Nsg-FlowLogs",
  "properties": {
    "displayName": "[Deprecated] Deploys NSG flow logs and traffic analytics",
    "description": "[Deprecated] Deprecated by built-in policy. Deploys NSG flow logs and traffic analytics to a storageaccountid with a specified retention period. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/e920df7f-9a64-4066-9b58-52684c02a091.html",
    "mode": "Indexed",
    "metadata": {
      "category": "Monitoring",
      "alzCloudEnvironments": [
        "AzureCloud",
        "AzureChinaCloud",
        "AzureUSGovernment"
      ],
      "version": "1.0.0-deprecated",
      "deployedBy": "epac/95e21193-319e-41e5-a413-656cc1601895/epac-dev",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "deprecated": true,
      "supersededBy": "e920df7f-9a64-4066-9b58-52684c02a091"
    },
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect"
        },
        "type": "String"
      },
      "logAnalytics": {
        "defaultValue": "",
        "metadata": {
          "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
          "displayName": "Resource ID of Log Analytics workspace",
          "strongType": "omsWorkspace"
        },
        "type": "String"
      },
      "trafficAnalyticsInterval": {
        "defaultValue": 60,
        "metadata": {
          "displayName": "Traffic Analytics processing interval mins (10/60)"
        },
        "type": "Integer"
      },
      "storageAccountResourceId": {
        "metadata": {
          "displayName": "Storage Account Resource Id",
          "strongType": "Microsoft.Storage/storageAccounts"
        },
        "type": "String"
      },
      "flowAnalyticsEnabled": {
        "defaultValue": false,
        "metadata": {
          "displayName": "Enable Traffic Analytics"
        },
        "type": "Boolean"
      },
      "retention": {
        "defaultValue": 5,
        "metadata": {
          "displayName": "Retention"
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "equals": "Microsoft.Network/networkSecurityGroups"
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.Network/networkWatchers/flowLogs",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "existenceCondition": {
            "allOf": [
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                "equals": "true"
              },
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                "equals": "[parameters('flowAnalyticsEnabled')]"
              }
            ]
          },
          "deployment": {
            "properties": {
              "parameters": {
                "logAnalytics": {
                  "value": "[parameters('logAnalytics')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "trafficAnalyticsInterval": {
                  "value": "[parameters('trafficAnalyticsInterval')]"
                },
                "resourceGroupName": {
                  "value": "[resourceGroup().name]"
                },
                "storageAccountResourceId": {
                  "value": "[parameters('storageAccountResourceId')]"
                },
                "flowAnalyticsEnabled": {
                  "value": "[parameters('flowAnalyticsEnabled')]"
                },
                "networkSecurityGroupName": {
                  "value": "[field('name')]"
                },
                "retention": {
                  "value": "[parameters('retention')]"
                }
              },
              "mode": "Incremental",
              "template": {
                "parameters": {
                  "logAnalytics": {
                    "type": "String"
                  },
                  "location": {
                    "type": "String"
                  },
                  "trafficAnalyticsInterval": {
                    "type": "int"
                  },
                  "resourceGroupName": {
                    "type": "String"
                  },
                  "storageAccountResourceId": {
                    "type": "String"
                  },
                  "flowAnalyticsEnabled": {
                    "type": "bool"
                  },
                  "networkSecurityGroupName": {
                    "type": "String"
                  },
                  "retention": {
                    "type": "int"
                  }
                },
                "contentVersion": "1.0.0.0",
                "resources": [
                  {
                    "type": "Microsoft.Network/networkWatchers/flowLogs",
                    "properties": {
                      "enabled": true,
                      "retentionPolicy": {
                        "enabled": true,
                        "days": "[parameters('retention')]"
                      },
                      "targetResourceId": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                      "storageId": "[parameters('storageAccountResourceId')]",
                      "format": {
                        "type": "JSON",
                        "version": 2
                      },
                      "flowAnalyticsConfiguration": {
                        "networkWatcherFlowAnalyticsConfiguration": {
                          "enabled": "[bool(parameters('flowAnalyticsEnabled'))]",
                          "workspaceId": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
                          "workspaceRegion": "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                          "trafficAnalyticsInterval": "[parameters('trafficAnalyticsInterval')]",
                          "workspaceResourceId": "[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                        }
                      }
                    },
                    "location": "[parameters('location')]",
                    "apiVersion": "2020-05-01",
                    "name": "[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]"
                  }
                ],
                "variables": {},
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "outputs": {}
              }
            }
          },
          "resourceGroupName": "NetworkWatcherRG"
        }
      }
    }
  }
}