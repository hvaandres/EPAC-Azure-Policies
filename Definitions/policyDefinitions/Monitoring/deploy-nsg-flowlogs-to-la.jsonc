{
  "$schema": "https://raw.githubusercontent.com/Azure/enterprise-azure-policy-as-code/main/Schemas/policy-definition-schema.json",
  "name": "Deploy-Nsg-FlowLogs-to-LA",
  "properties": {
    "displayName": "[Deprecated] Deploys NSG flow logs and traffic analytics to Log Analytics",
    "description": "[Deprecated] Deprecated by built-in policy. Deploys NSG flow logs and traffic analytics to Log Analytics with a specified retention period. Superseded by https://www.azadvertizer.net/azpolicyadvertizer/e920df7f-9a64-4066-9b58-52684c02a091.html",
    "mode": "Indexed",
    "metadata": {
      "category": "Monitoring",
      "version": "1.1.0-deprecated",
      "alzCloudEnvironments": [
        "AzureCloud",
        "AzureChinaCloud",
        "AzureUSGovernment"
      ],
      "deployedBy": "epac/95e21193-319e-41e5-a413-656cc1601895/epac-dev",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "deprecated": true,
      "supersededBy": "e920df7f-9a64-4066-9b58-52684c02a091"
    },
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect"
        },
        "type": "String"
      },
      "interval": {
        "defaultValue": 60,
        "metadata": {
          "displayName": "Traffic Analytics processing interval mins (10/60)"
        },
        "type": "Integer"
      },
      "workspace": {
        "defaultValue": "<workspace resource ID>",
        "metadata": {
          "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
          "displayName": "Resource ID of Log Analytics workspace",
          "strongType": "omsWorkspace"
        },
        "type": "String"
      },
      "retention": {
        "defaultValue": 5,
        "metadata": {
          "displayName": "Retention"
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Network/networkSecurityGroups"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "type": "Microsoft.Network/networkWatchers/flowlogs",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
            "/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12",
            "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
            "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab",
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "existenceCondition": {
            "allOf": [
              {
                "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                "equals": "true"
              }
            ]
          },
          "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
          "deployment": {
            "properties": {
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "interval": {
                  "value": "[parameters('interval')]"
                },
                "networkSecurityGroup": {
                  "value": "[field('id')]"
                },
                "workspace": {
                  "value": "[parameters('workspace')]"
                },
                "retention": {
                  "value": "[parameters('retention')]"
                }
              },
              "mode": "Incremental",
              "template": {
                "parameters": {
                  "location": {
                    "type": "String"
                  },
                  "interval": {
                    "type": "int"
                  },
                  "networkSecurityGroup": {
                    "type": "String"
                  },
                  "workspace": {
                    "type": "String"
                  },
                  "retention": {
                    "type": "int"
                  },
                  "time": {
                    "defaultValue": "[utcNow()]",
                    "type": "String"
                  }
                },
                "contentVersion": "1.0.0.0",
                "resources": [
                  {
                    "resourceGroup": "[variables('resourceGroupName')]",
                    "type": "Microsoft.Resources/deployments",
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "contentVersion": "1.0.0.0",
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts",
                            "properties": {},
                            "location": "[parameters('location')]",
                            "apiVersion": "2019-06-01",
                            "name": "[variables('storageAccountName')]",
                            "kind": "StorageV2",
                            "sku": {
                              "name": "Standard_LRS",
                              "tier": "Standard"
                            }
                          }
                        ],
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
                      }
                    },
                    "apiVersion": "2019-10-01",
                    "name": "[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]"
                  },
                  {
                    "resourceGroup": "NetworkWatcherRG",
                    "type": "Microsoft.Resources/deployments",
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "contentVersion": "1.0.0.0",
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkWatchers",
                            "properties": {},
                            "location": "[parameters('location')]",
                            "apiVersion": "2020-05-01",
                            "name": "[concat('NetworkWatcher_', toLower(parameters('location')))]",
                            "resources": [
                              {
                                "type": "flowLogs",
                                "properties": {
                                  "enabled": true,
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": "[parameters('retention')]"
                                  },
                                  "format": {
                                    "type": "JSON",
                                    "version": 2
                                  },
                                  "flowAnalyticsConfiguration": {
                                    "networkWatcherFlowAnalyticsConfiguration": {
                                      "enabled": true,
                                      "workspaceResourceId": "[parameters('workspace')]",
                                      "trafficAnalyticsInterval": "[parameters('interval')]"
                                    }
                                  },
                                  "storageId": "[concat(subscription().id, '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                                  "targetResourceId": "[parameters('networkSecurityGroup')]"
                                },
                                "location": "[parameters('location')]",
                                "apiVersion": "2019-11-01",
                                "name": "[concat(variables('securityGroupName'), '-Network-flowlog')]",
                                "dependsOn": [
                                  "[concat('NetworkWatcher_', toLower(parameters('location')))]"
                                ]
                              }
                            ]
                          }
                        ],
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
                      }
                    },
                    "apiVersion": "2019-10-01",
                    "name": "[concat('NetworkWatcherRG', '.', variables('securityGroupName'))]",
                    "dependsOn": [
                      "[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]"
                    ]
                  }
                ],
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "variables": {
                  "resourceGroupName": "[split(parameters('networkSecurityGroup'), '/')[4]]",
                  "securityGroupName": "[split(parameters('networkSecurityGroup'), '/')[8]]",
                  "storageAccountName": "[concat('es', uniqueString(variables('securityGroupName'), parameters('time')))]"
                },
                "outputs": {}
              }
            },
            "location": "northeurope"
          },
          "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
          "deploymentScope": "subscription",
          "existenceScope": "resourceGroup"
        }
      }
    }
  }
}